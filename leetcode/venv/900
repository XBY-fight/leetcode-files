#!/usr/bin/python
#-*- coding: utf8 -*-
#from leetcode-lee215
class RLEIterator(object):

    def __init__(self, A):
        """
        :type A: List[int]
        """
        self.it=A[::-1]

    def next(self, n):
        """
        :type n: int
        :rtype: int
        """
        while self.it and self.it[-1] <= n :
            if self.it[-1] : last=self.it[-2]
            n-=self.it.pop()
            self.it.pop()
        if n and self.it :
            self.it[-1]-=n
            last=self.it[-2]
        return last if self.it else -1

solution=RLEIterator([3,8,0,9.2,5])
output=solution.next(2)
print(output)
output=solution.next(1)
print(output)
output=solution.next(1)
print(output)
output=solution.next(2)
print(output)